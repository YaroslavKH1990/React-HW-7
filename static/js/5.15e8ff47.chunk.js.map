{"version":3,"sources":["redux/contacts/contacts-operations.js","components/Form/Form.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","pages/ContactsPage/ContactsPage.js"],"names":["text","dispatch","contact","name","number","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","loadContactRequest","get","loadContactSuccess","loadContactError","Form","state","inputFormChange","event","currentTarget","value","setState","formSubmit","e","preventDefault","props","contacts","items","find","alert","onSubmit","this","type","onChange","Component","connect","contactsOperations","getValueFilter","filter","getFilterContacts","createSelector","normalFilter","toLowerCase","includes","getLoader","loading","selectors","filterContacts","deleteContact","map","onClick","ContactsPage","loadContacts","loader","size","color","margin"],"mappings":"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","file":"static/js/5.15e8ff47.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  loadContactRequest,\r\n  loadContactSuccess,\r\n  loadContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actoins\";\r\n\r\nconst loadContacts = () => (dispatch) => {\r\n  dispatch(loadContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(loadContactSuccess(data)))\r\n    .catch((error) => dispatch(loadContactError(error.message)));\r\n};\r\n\r\nconst addContact = (text) => (dispatch) => {\r\n  const contact = {\r\n    name: text.name,\r\n    number: text.number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport default { addContact, deleteContact, loadContacts };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputFormChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  formSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (name || number) {\r\n      const duplicate = this.props.contacts.items.find(\r\n        contact => contact.name === name,\r\n      );\r\n\r\n      duplicate\r\n        ? alert(`${this.state.name} is already in contacts.`)\r\n        : this.props.onSubmit(this.state);\r\n\r\n      this.setState({ name: '', number: '' });\r\n    } else {\r\n      alert('No field is filled');\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.inputFormChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.inputFormChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return state;\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: text => dispatch(contactsOperations.addContact(text)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getLoader = (state) => state.contacts.loading;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getValueFilter = (state) => state.contacts.filter;\r\n\r\nconst getFilterContacts = createSelector(\r\n  [getAllContacts, getValueFilter],\r\n  (contacts, filter) => {\r\n    const normalFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoader,\r\n  getValueFilter,\r\n  getFilterContacts,\r\n  getFilterContacts,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contacts/contacts-actoins\";\r\nimport selectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <h2>Find contacts by name</h2>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: selectors.getValueFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(filterContacts(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport selectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactsList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button onClick={() => deleteContact(id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: selectors.getFilterContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Form from \"../../components/Form\";\r\nimport Filter from \"../../components/Filter\";\r\nimport ContactsList from \"../../components/ContactsList\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport selectors from \"../../redux/contacts/contacts-selectors\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nclass ContactsPage extends Component {\r\n  componentDidMount() {\r\n    this.props.loadContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>ContactsPage</h1>\r\n        <Form />\r\n        <Filter />\r\n        {this.props.loader ? (\r\n          <PulseLoader size={15} color={\"#36D7B7\"} margin={5} />\r\n        ) : (\r\n          <ContactsList />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loader: selectors.getLoader(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadContacts: () => dispatch(contactsOperations.loadContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\r\n"],"sourceRoot":""}