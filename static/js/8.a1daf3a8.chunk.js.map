{"version":3,"sources":["pages/RegisterPage/RegisterPage.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","connect","dispatch","onSubmit","text","usersOperations","addUsers","classes","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","e","preventDefault","name","target","value","email","password","Grid","container","item","xs","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","justify","exact","to","routes","login","Box","mt"],"mappings":"0VAkBA,SAASA,IACP,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,2BAA3B,0BAEQ,KACP,IAAIC,MAAOC,cACX,OAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAyFhC,IAIea,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,SAAU,SAACC,GAAD,OAAUF,EAASG,IAAgBC,SAASF,QAGzCH,EAzFf,YAAqC,IAAbE,EAAY,EAAZA,SAChBI,EAAUxB,IAWhB,OACE,eAACyB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWL,EAAQrB,MAAxB,UACE,cAAC2B,EAAA,EAAD,CAAQD,UAAWL,EAAQf,OAA3B,SACE,cAAC,IAAD,MAEF,cAACjB,EAAA,EAAD,CAAYkC,UAAU,KAAKjC,QAAQ,KAAnC,qBAGA,uBAAMoC,UAAWL,EAAQT,KAAMgB,YAAU,EAACX,SAnBjC,SAACY,GACdA,EAAEC,iBACFb,EAAS,CACPc,KAAMF,EAAEG,OAAO,GAAGC,MAClBC,MAAOL,EAAEG,OAAO,GAAGC,MACnBE,SAAUN,EAAEG,OAAO,GAAGC,SAcpB,UACE,eAACG,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,EAAzB,UACE,cAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,aAAa,OACbV,KAAK,OACLzC,QAAQ,WACRoD,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNC,WAAS,MAGb,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACElD,QAAQ,WACRoD,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNd,KAAK,QACLU,aAAa,YAGjB,cAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACElD,QAAQ,WACRoD,UAAQ,EACRC,WAAS,EACTZ,KAAK,WACLc,MAAM,WACNE,KAAK,WACLH,GAAG,WACHH,aAAa,0BAInB,cAACO,EAAA,EAAD,CACED,KAAK,SACLJ,WAAS,EACTrD,QAAQ,YACRC,MAAM,UACNmC,UAAWL,EAAQP,OALrB,qBASA,cAACsB,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAQ,WAAxB,SACE,cAACb,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CAASY,OAAK,EAACC,GAAIC,IAAOC,MAA1B,wDAOR,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACnE,EAAD","file":"static/js/8.a1daf3a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport usersOperations from \"../../redux/users/users-ops\";\r\n// import Avatar from \"@material-ui/core/Avatar\";\r\nimport routes from \"../../routes\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction RegisterPage({ onSubmit }) {\r\n  const classes = useStyles();\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({\r\n      name: e.target[0].value,\r\n      email: e.target[2].value,\r\n      password: e.target[4].value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={submit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"name\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <NavLink exact to={routes.login}>\r\n                Already have an account? Sign in\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (text) => dispatch(usersOperations.addUsers(text)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);\r\n\r\n// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import usersOperations from \"../../redux/users/users-ops\";\r\n\r\n// class RegisterPage extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   };\r\n\r\n//   inputFormChange = (event) => {\r\n//     const { name, value } = event.currentTarget;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   formSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onSubmit(this.state);\r\n//     this.setState({ name: \"\", email: \"\", password: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.formSubmit}>\r\n//         <label>\r\n//           Name\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={this.state.name}\r\n//             onChange={this.inputFormChange}\r\n//           />\r\n//         </label>\r\n//         <label>\r\n//           Email\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"email\"\r\n//             value={this.state.email}\r\n//             onChange={this.inputFormChange}\r\n//           />\r\n//         </label>\r\n//         <label>\r\n//           Password\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"password\"\r\n//             value={this.state.password}\r\n//             onChange={this.inputFormChange}\r\n//           />\r\n//         </label>\r\n//         <button type=\"submit\">Add contact</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: (text) => dispatch(usersOperations.addUsers(text)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(RegisterPage);\r\n"],"sourceRoot":""}