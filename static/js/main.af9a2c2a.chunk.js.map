{"version":3,"sources":["redux/contacts/contacts-actoins.js","routes.js","redux/users/users-ops.js","redux/users/users-act.js","redux/users/users-select.js","components/Nav/Nav.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/users/users-reducer.js","redux/store.js","index.js"],"names":["loadContactRequest","createAction","loadContactSuccess","loadContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","home","contacts","register","login","axios","defaults","baseURL","token","set","headers","Authorization","unset","addUsers","user","dispatch","a","addUsersRequest","post","res","data","addUsersSuccess","addUsersError","message","logInUsers","loginUsersRequest","loginUsersSuccess","loginUsersError","logOut","logOutUsersRequest","logOutUsersSuccess","logOutUsersError","getCurrentUser","getState","persistedToken","users","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","state","isAuthUser","email","styles","NavLink","marginLeft","connect","isAuth","usersSelect","style","exact","to","routes","onLogout","usersOperations","type","onClick","AuthNav","div","display","justifyContent","isAuthenticated","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","ContactsPage","LoginPage","RegisterPage","App","this","onGetCurrentUser","fallback","path","mapDispatchToProps","items","createReducer","_","payload","filter","id","loading","combineReducers","initialUser","name","setError","error","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","usersReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af9a2c2a.chunk.js","sourcesContent":["// import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const loadContactRequest = createAction(\"contacts/loadContactRequest\");\r\nexport const loadContactSuccess = createAction(\"contacts/loadContactSuccess\");\r\nexport const loadContactError = createAction(\"contacts/loadContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const filterContacts = createAction(\"contacts/filter\");\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  home: \"/\",\r\n  contacts: \"/contacts\",\r\n  register: \"/register\",\r\n  login: \"/login\",\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  addUsersRequest,\r\n  addUsersSuccess,\r\n  addUsersError,\r\n  loginUsersRequest,\r\n  loginUsersSuccess,\r\n  loginUsersError,\r\n  logOutUsersRequest,\r\n  logOutUsersSuccess,\r\n  logOutUsersError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./users-act\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst addUsers = (user) => async (dispatch) => {\r\n  dispatch(addUsersRequest());\r\n\r\n  try {\r\n    const res = await axios.post(\"/users/signup\", user);\r\n    token.set(res.data.token);\r\n    dispatch(addUsersSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(addUsersError(error.message));\r\n  }\r\n};\r\n\r\nconst logInUsers = (user) => async (dispatch) => {\r\n  dispatch(loginUsersRequest());\r\n\r\n  try {\r\n    const res = await axios.post(\"/users/login\", user);\r\n    token.set(res.data.token);\r\n    dispatch(loginUsersSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(loginUsersError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(logOutUsersRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(logOutUsersSuccess());\r\n  } catch (error) {\r\n    dispatch(logOutUsersError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    users: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const res = await axios.get(\"/users/current\");\r\n    dispatch(getCurrentUserSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { addUsers, logInUsers, token, logOut, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addUsersRequest = createAction(\"users/addUsersRequest\");\r\nexport const addUsersSuccess = createAction(\"users/addUsersSuccess\");\r\nexport const addUsersError = createAction(\"users/addUsersError\");\r\n\r\nexport const loginUsersRequest = createAction(\"users/loginUsersRequest\");\r\nexport const loginUsersSuccess = createAction(\"users/loginUsersSuccess\");\r\nexport const loginUsersError = createAction(\"users/loginUsersError\");\r\n\r\nexport const logOutUsersRequest = createAction(\"users/logOutUsersRequest\");\r\nexport const logOutUsersSuccess = createAction(\"users/logOutUsersSuccess\");\r\nexport const logOutUsersError = createAction(\"users/logOutUsersError\");\r\n\r\nexport const getCurrentUserRequest = createAction(\r\n  \"users/getCurrentUserRequest\"\r\n);\r\nexport const getCurrentUserSuccess = createAction(\r\n  \"users/getCurrentUserSuccess\"\r\n);\r\nexport const getCurrentUserError = createAction(\"users/getCurrentUserError\");\r\n","const getIsAuth = (state) => state.users.isAuthUser;\r\nconst getEmail = (state) => state.users.user.email;\r\n\r\nexport default { getIsAuth, getEmail };\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport usersSelect from \"../../redux/users/users-select\";\r\n\r\nimport routes from \"../../routes\";\r\n\r\nconst styles = {\r\n  NavLink: {\r\n    marginLeft: \"10px\",\r\n  },\r\n};\r\n\r\nfunction Nav({ isAuth }) {\r\n  return (\r\n    <div>\r\n      <NavLink style={styles.NavLink} exact to={routes.home}>\r\n        Home\r\n      </NavLink>\r\n      {isAuth && (\r\n        <NavLink style={styles.NavLink} exact to={routes.contacts}>\r\n          ContactsPage\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: usersSelect.getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Nav);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport usersSelect from \"../../redux/users/users-select\";\r\nimport usersOperations from \"../../redux/users/users-ops\";\r\n\r\nfunction UserMenu({ email, onLogout }) {\r\n  return (\r\n    <div>\r\n      <span>{email}</span>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: usersSelect.getEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onLogout: () => dispatch(usersOperations.logOut()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport routes from \"../../routes\";\r\n\r\nconst styles = {\r\n  NavLink: {\r\n    marginLeft: \"10px\",\r\n  },\r\n};\r\n\r\nfunction AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink style={styles.NavLink} exact to={routes.login}>\r\n        LoginPage\r\n      </NavLink>\r\n      <NavLink style={styles.NavLink} exact to={routes.register}>\r\n        RegisterPage\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Nav from \"../Nav\";\r\nimport UserMenu from \"../UserMenu\";\r\nimport AuthNav from \"../AuthNav\";\r\nimport usersSelect from \"../../redux/users/users-select\";\r\n\r\nconst styles = {\r\n  div: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n};\r\n\r\nfunction AppBar({ isAuth }) {\r\n  return (\r\n    <div style={styles.div}>\r\n      <Nav />\r\n      {isAuth ? <UserMenu /> : <AuthNav />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: usersSelect.getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport usersSelect from \"../redux/users/users-select\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: usersSelect.getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport usersSelect from \"../redux/users/users-select\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: usersSelect.getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppBar from \"./components/AppBar\";\r\nimport usersOperations from \"./redux/users/users-ops\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\n\r\nimport routes from \"./routes\";\r\n\r\nconst HomePage = lazy(() => import(\"./pages/HomePage\"));\r\nconst ContactsPage = lazy(() => import(\"./pages/ContactsPage\"));\r\nconst LoginPage = lazy(() => import(\"./pages/LoginPage\"));\r\nconst RegisterPage = lazy(() => import(\"./pages/RegisterPage\"));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar />\r\n        <Suspense fallback={<p>Loading....</p>}>\r\n          <Switch>\r\n            <Route exact path={routes.home} component={HomePage} />\r\n            <PrivateRoute\r\n              exact\r\n              path={routes.contacts}\r\n              component={ContactsPage}\r\n              redirectTo=\"/login\"\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              path={routes.login}\r\n              restricted\r\n              component={LoginPage}\r\n              redirectTo=\"/contacts\"\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              path={routes.register}\r\n              restricted\r\n              component={RegisterPage}\r\n              redirectTo=\"/contacts\"\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: usersOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  loadContactRequest,\r\n  loadContactSuccess,\r\n  loadContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContacts,\r\n} from \"./contacts-actoins\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst items = createReducer([], {\r\n  [loadContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [loadContactRequest]: () => true,\r\n  [loadContactSuccess]: () => false,\r\n  [loadContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addUsersSuccess,\r\n  addUsersError,\r\n  loginUsersSuccess,\r\n  loginUsersError,\r\n  logOutUsersSuccess,\r\n  logOutUsersError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./users-act\";\r\n\r\nconst initialUser = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUser, {\r\n  [addUsersSuccess]: (_, { payload }) => payload.user,\r\n  [loginUsersSuccess]: (_, { payload }) => payload.user,\r\n  [logOutUsersSuccess]: () => initialUser,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [addUsersSuccess]: (_, { payload }) => payload.token,\r\n  [loginUsersSuccess]: (_, { payload }) => payload.token,\r\n  [logOutUsersSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [addUsersError]: setError,\r\n  [loginUsersError]: setError,\r\n  [logOutUsersError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthUser = createReducer(null, {\r\n  [addUsersSuccess]: () => true,\r\n  [loginUsersSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [addUsersError]: () => false,\r\n  [loginUsersError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logOutUsersSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthUser,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport usersReducer from \"./users/users-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    users: persistReducer(authPersistConfig, usersReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}